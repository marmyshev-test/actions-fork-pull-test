name: Reusable build with analyze

on:
  workflow_call:
    inputs:
      analyze:
        default: false
        required: false
        type: boolean
    secrets:
      my-secret:
        required: true

jobs:
  build-and-analyze:
    name: Pass input and secrets to my-action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: inputs.analyze
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v2
        if: ${{ !inputs.analyze }}

      - name: Run a multi-line script
        env:
          S1: ${{ secrets.my-secret }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYZE: ${{ inputs.analyze }}
          PR_NUMBER: "${{ github.event_name == 'push' && format(' -Dsonar.pullrequest.key={0}', github.event.pull_request.number) || '' }}"
          SONAR_PARAM: "${{ inputs.analyze && format('{0}{1}', 'org.sonarsource.scanner.maven:sonar-maven-plugin:sonar', env.PR_NUMBER) || '' }}"
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo secret S1: ${S1}
          echo secret GITHUB_TOKEN: ${GITHUB_TOKEN}
          echo secret ANALYZE: ${ANALYZE}
          if [ -z "${S1}" ]; then echo "secret var is Unset!"; else echo "secret var is set"; fi
          echo event name: ${{ github.event_name }}
          echo PR_NUMBER: ${PR_NUMBER}
          echo SONAR_PARAM: ${SONAR_PARAM}
          if [ ${{ github.event_name == 'push'}} ]; then echo "this is push"; fi
          if [ ${{ github.event_name == 'pull_request_target'}} ]; then echo "this is pull_request_target"; fi
          echo README:
          cat README.md
